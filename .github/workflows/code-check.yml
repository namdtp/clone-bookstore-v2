name: CI/CD with SonarQube and Jenkins

on:
  push:
    branches:
      - main
      - dev
      - staging

jobs:
  code-analysis:
    name: Build and Analyze React App
    runs-on: ubuntu-latest

    steps:
      # Bước 1: Checkout mã nguồn
      - name: Checkout code
        uses: actions/checkout@v3

      # Bước 2: Cài đặt JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Bước 3: Cài đặt Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      # Bước 4: Cài đặt dependencies
      - name: Install dependencies
        run: npm install

      # Bước 5: Build ứng dụng React
      - name: Build the React app
        run: npm run build

      # Bước 6: Kiểm tra kết nối tới SonarQube
      - name: Test connection to SonarQube
        run: |
          curl -v http://34.126.109.151:9000/ || exit 1

      # Bước 7: Phân tích mã với SonarQube
      - name: Analyze code with SonarQube
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=test1 \
          -Dsonar.projectName="Test 1 - Branch: ${{ github.ref_name }}" \
          -Dsonar.sources=src \
          -Dsonar.exclusions=**/node_modules/**,**/build/** \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.host.url=http://34.126.109.151:9000/ \
          -Dsonar.login=$SONARQUBE_TOKEN \
          -X

      # Bước 8: Kiểm tra kết quả phân tích từ SonarQube
      - name: Verify SonarQube Analysis
        run: echo "SonarQube analysis completed. Check results on http://34.126.109.151:9000/"

  trigger-jenkins:
    name: Trigger Jenkins CI/CD
    needs: code-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Determine branch and trigger Jenkins pipeline
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "Triggering Jenkins for Production Pipeline..."
            curl -X POST "http://34.126.109.151:8080/view/all/job/pipeline-prod/build?token=prod" \
              --user "$JENKINS_USER:$JENKINS_TOKEN" || echo "Failed to trigger Jenkins pipeline"
          elif [ "${{ github.ref_name }}" = "staging" ]; then
            echo "Triggering Jenkins for Staging Pipeline..."
            curl -X POST "http://34.126.109.151:8080/job/pipeline-staging/buildWithParameters?token=staging" \
              --user "$JENKINS_USER:$JENKINS_TOKEN" || echo "Failed to trigger Jenkins pipeline"
          elif [ "${{ github.ref_name }}" = "dev" ]; then
            echo "Triggering Jenkins for Development Pipeline..."
            curl -X POST "http://34.126.109.151:8080/view/all/job/testpipeline1/build?token=dev" \
              --user "$JENKINS_USER:$JENKINS_TOKEN" || echo "Failed to trigger Jenkins pipeline"
          else
            echo "Branch ${{ github.ref_name }} is not handled by this workflow."
          fi
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USER: ${{ secrets.JENKINS_USER }}
          JENKINS_TOKEN: ${{ secrets.JENKINS_TOKEN }}
